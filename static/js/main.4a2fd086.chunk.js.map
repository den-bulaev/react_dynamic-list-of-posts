{"version":3,"sources":["components/PostsList/PostsList.jsx","types.js","components/NewCommentForm/NewCommentForm.jsx","api/api.js","api/posts.js","api/comments.js","components/PostDetails/PostDetails.jsx","components/UserSelect/UserSelect.jsx","App.jsx","index.js"],"names":["PostsList","PropTypes","shape","id","number","isRequired","userId","title","string","body","createdAt","updatedAt","posts","setId","selectedPostId","className","map","key","type","onClick","defaultProps","NewCommentForm","name","placeholder","request","endpoint","options","fetch","then","response","ok","Error","status","statusText","json","result","data","getUserPosts","filter","post","getPostComments","postId","comments","comment","removeComment","commentId","method","PostDetails","useState","setPost","setComments","commentsVisibility","setCommentsVisibility","useEffect","getPostDetails","handleClick","event","a","target","value","console","log","length","UserSelect","setSelectedUserId","onChange","App","setPosts","setSelectedPostId","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a2fd086.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TypePost } from '../../types';\n\nimport './PostsList.scss';\nimport '../pressed-button.scss';\n\nexport const PostsList = ({ posts, setId, selectedPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts !== null && (\n        posts.map(({ id, title, userId }) => (\n          <li className=\"PostsList__item\" key={id}>\n            <div>\n              <b>\n                [\n                {`User #${userId}`}\n                ]:\n                {' '}\n              </b>\n              {title}\n            </div>\n\n            {selectedPostId === id ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button pressed-button\"\n                onClick={() => setId(0)}\n              >\n                Close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setId(id)}\n              >\n                Open\n              </button>\n            )}\n          </li>\n        ))\n      )}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(TypePost),\n  setId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n\nPostsList.defaultProps = {\n  posts: [],\n};\n","import PropTypes from 'prop-types';\n\nexport const TypePost = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired,\n  updatedAt: PropTypes.string.isRequired,\n});\n","import React from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = () => (\n  <form className=\"NewCommentForm\">\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <button\n      type=\"submit\"\n      className=\"NewCommentForm__submit-button button\"\n    >\n      Add a comment\n    </button>\n  </form>\n);\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (endpoint, options) => (\n  fetch(BASE_URL + endpoint, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    }).then(result => result.data));\n\nexport const remove = (endpoint) => {\n  const method = { method: 'DELETE' };\n\n  return request(endpoint, method);\n};\n","import { request } from './api';\n\nexport const getUserPosts = (posts, userId) => {\n  if (!userId) {\n    return posts;\n  }\n\n  return posts.filter(post => post.userId === userId);\n};\n\nexport const getPostDetails = (postId) => {\n  if (!postId) {\n    return 0;\n  }\n\n  return request(`/posts/${postId}`);\n};\n","import { request, remove } from './api';\n\nexport const getPostComments = (postId) => {\n  if (!postId || typeof (postId) !== 'number') {\n    return 0;\n  }\n\n  return request('/comments')\n    .then(comments => comments.filter(comment => comment.postId === postId));\n};\n\nexport const removeComment = commentId => remove(`/comments/${commentId}`);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, removeComment } from '../../api/comments';\n\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [commentsVisibility, setCommentsVisibility] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then(result => setPost(result));\n\n    getPostComments(postId)\n      .then(result => setComments(result));\n  }, [postId]);\n\n  const changeCommentsVisibility = () => {\n    setCommentsVisibility(!commentsVisibility);\n  };\n\n  const handleClick = async(event) => {\n    await removeComment(event.target.value);\n\n    getPostComments(postId)\n      .then(result => setComments(result));\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        {/* eslint-disable-next-line no-console */}\n        {console.log(33333, post, 999)}\n        <p>{post.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length > 0 && (\n          <>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={changeCommentsVisibility}\n            >\n              {commentsVisibility\n                /* eslint-disable-next-line max-len */\n                ? `Hide ${comments.length} comment${comments.length === 1 ? '' : 's'}`\n                /* eslint-disable-next-line max-len */\n                : `Show ${comments.length} comment${comments.length === 1 ? '' : 's'}`}\n            </button>\n\n            <ul className=\"PostDetails__list\">\n              {comments.map(comment => commentsVisibility && (\n                <li className=\"PostDetails__list-item\" key={comment.id}>\n                  <button\n                    type=\"button\"\n                    value={comment.id}\n                    className=\"PostDetails__remove-button button\"\n                    onClick={handleClick}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const UserSelect = ({ setSelectedUserId }) => {\n  const handleChange = (event) => {\n    setSelectedUserId(event.target.value);\n  };\n\n  return (\n    <label>\n      Select a user: &nbsp;\n\n      <select\n        className=\"App__user-selector\"\n        onChange={handleChange}\n      >\n        <option value=\"0\">All users</option>\n        <option value=\"1\">Leanne Graham</option>\n        <option value=\"2\">Ervin Howell</option>\n        <option value=\"3\">Clementine Bauch</option>\n        <option value=\"4\">Patricia Lebsack</option>\n        <option value=\"5\">Chelsey Dietrich</option>\n        <option value=\"6\">Mrs. Dennis Schulist</option>\n        <option value=\"7\">Kurtis Weissnat</option>\n        <option value=\"8\">Nicholas Runolfsdottir V</option>\n        <option value=\"9\">Glenna Reichert</option>\n        <option value=\"10\">Galina Lozinska</option>\n      </select>\n    </label>\n  );\n};\n\nUserSelect.propTypes = {\n  setSelectedUserId: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelect } from './components/UserSelect/UserSelect';\n\nimport { request } from './api/api';\nimport { getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n\n  useEffect(() => {\n    request('/posts')\n      .then(result => setPosts(result));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect\n          setSelectedUserId={setSelectedUserId}\n          selectedPostId={selectedPostId}\n        />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={getUserPosts(posts, +selectedUserId)}\n            setId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId !== 0 && (\n            <PostDetails\n              postId={selectedPostId}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}